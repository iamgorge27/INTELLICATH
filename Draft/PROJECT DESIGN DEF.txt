### **Hardware Design**  
The **INTELLICATH system** is designed with a structured and efficient hardware setup to ensure continuous catheter monitoring. The **power management unit** includes a **12V power supply**, regulated through an **SPST switch** and an **XL4016 voltage regulator**, which steps down the voltage to **8.7V**. This regulated power is supplied to a **YX850 automatic power switching module**, ensuring continuous operation even during power failures. The system also includes **two PKCell Lithium-Ion Polymer Batteries (3.7V, 1000mAh each) with a Battery Management System (BMS)** for protection. To provide stable power to the **ESP32 WiFi IoT Development Board**, an **XL4015 step-down module** regulates the voltage to **3.7V or 5V**, allowing consistent operation. The **ESP32 microcontroller** is responsible for processing data and wirelessly transmitting urine volume measurements. The entire circuit is built on a **double-sided copper-clad laminate PCB (150x100x0.8mm)**, ensuring durability and strong electrical connections.  

A **Load Cell Sensor with an HX711 amplifier** is used to measure the weight of the **catheter bag**. The sensor detects urine accumulation, converts the weight into an electrical signal, and sends it to the **ESP32 for processing**. The data is then formatted in **JSON** and transmitted to a **Flask-based API**, which acts as a bridge between the **ESP32 and a MySQL database**. The system uses a **Multiple Linear Regression (MLR) model** to analyze **urine output, urine flow rate, catheter bag volume, and remaining capacity**. The model predicts when the catheter bag will reach full capacity and triggers real-time alerts to notify healthcare providers. To ensure protection from environmental factors such as moisture and dust, all components are enclosed in a **weatherproof IP65 NEMA 4 ABS enclosure (240x160x92mm)**. The **load cell sensor** is securely mounted underneath, allowing it to hold and measure the catheter bag continuously.  

### **Software Design**  
The system is programmed using **Arduino IDE**, which configures the **ESP32 microcontroller** to manage the **load cell sensor** and establish **WiFi communication**. The ESP32 sends urine volume data via **HTTP GET and POST requests** to a **Flask API**, where the data is stored and processed in a **MySQL database**. This data includes **urine output levels, urine flow rate, catheter bag volume, and estimated remaining capacity**. A **web-based dashboard** allows healthcare providers to **monitor real-time trends, receive alerts, and track catheter bag status** on a **desktop monitor or mobile application**. The system automatically updates the database and notifies medical staff when urine levels approach critical thresholds. By integrating **IoT technology with predictive analytics**, the system provides an automated solution that enhances **catheter monitoring, reduces infection risks, and improves patient care**.